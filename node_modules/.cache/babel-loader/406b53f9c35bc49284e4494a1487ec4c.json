{"ast":null,"code":"import React from'react';import{sendMessageCreator,updateNewMessageBodyCreator}from'../redux/dialog-reducer';import{connect}from'react-redux';import Dialogs from'./Dialogs';import{Redirect}from'react-router-dom';import{withAuthRedirect}from'../../hoc/withAuthRedirect';import{compose}from'redux';var mapStateToProps=function mapStateToProps(state){return{dialogPage:state.dialogPage};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{sendMessage:function sendMessage(newMessageBody){dispatch(sendMessageCreator(newMessageBody));}};};export default compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect)(Dialogs);","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","sendMessageCreator","updateNewMessageBodyCreator","connect","Dialogs","Redirect","withAuthRedirect","compose","mapStateToProps","state","dialogPage","mapDispatchToProps","dispatch","sendMessage","newMessageBody"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,kBAAT,CAA6BC,2BAA7B,KAAgE,yBAAhE,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,gBAAT,KAAiC,4BAAjC,CACA,OAASC,OAAT,KAAwB,OAAxB,CAMA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHC,UAAU,CAAED,KAAK,CAACC,UADf,CAAP,CAGH,CAJD,CAKA,GAAIC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHC,WAAW,CAAE,qBAACC,cAAD,CAAqB,CAACF,QAAQ,CAACX,kBAAkB,CAACa,cAAD,CAAnB,CAAR,CAA6C,CAD7E,CAAP,CAGH,CAJD,CASA,cAAeP,CAAAA,OAAO,CAClBJ,OAAO,CAACK,eAAD,CAAkBG,kBAAlB,CADW,CAElBL,gBAFkB,CAAP,CAIbF,OAJa,CAAf","sourcesContent":["import React from 'react';\n\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../redux/dialog-reducer';\n\nimport { connect } from 'react-redux';\nimport Dialogs from './Dialogs';\nimport { Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogPage: state.dialogPage\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) =>  {dispatch(sendMessageCreator(newMessageBody))}\n    }\n}\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n\n)(Dialogs);\n\n"]},"metadata":{},"sourceType":"module"}
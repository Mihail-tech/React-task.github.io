{"ast":null,"code":"import _objectSpread from\"/Users/itshatle/Desktop/rest/reac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{authAPI}from\"../../api/api\";import{stopSubmit}from'redux-forms/lib/reducer';import{getAuthUserData}from'./auth-reducer';var INITIALIZED_SUCCESS='INITIALIZED_SUCCESS';var initialState={initialized:false};var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case INITIALIZED_SUCCESS:return _objectSpread(_objectSpread({},state),{},{initialized:true});default:return;}};export var setInitialisedSuccess=function setInitialisedSuccess(){return{type:INITIALIZED_SUCCESS};};export var initialiseApp=function initialiseApp(){return function(dispatch){var promise=dispatch(getAuthUserData());Promise.all([promise]).then(function(){dispatch(setInitialisedSuccess());});};};export var login=function login(email,password,remember){return function(dispatch){authAPI.login(email,password,remember).then(function(response){if(response.data.resultCode===0){dispatch(getAuthUserData());}else{var messege=response.data.messages.length>0?response.data.messages[0]:\"error\";dispatch(stopSubmit('login',{_error:'Common error'}));}});};};export default appReducer;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/redux/app-reducer.js"],"names":["authAPI","stopSubmit","getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","setInitialisedSuccess","initialiseApp","dispatch","promise","Promise","all","then","login","email","password","remember","response","data","resultCode","messege","messages","length","_error"],"mappings":"uJAAA,OAASA,OAAT,KAAwB,eAAxB,CACA,OAAQC,UAAR,KAAyB,yBAAzB,CACA,OAAQC,eAAR,KAA8B,gBAA9B,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAGA,GAAIC,CAAAA,YAAY,CAAG,CAChBC,WAAW,CAAE,KADG,CAAnB,CAKA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CACjD,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKN,CAAAA,mBAAL,CACI,sCACOI,KADP,MAEIF,WAAW,CAAE,IAFjB,GAMR,QACI,OATJ,CAWH,CAZD,CAcA,MAAO,IAAMK,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAChC,CAACD,IAAI,CAAEN,mBAAP,CADgC,EAA9B,CAGP,MAAO,IAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAAc,CAC7C,GAAIC,CAAAA,OAAO,CAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB,CAEAY,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EAAuBG,IAAvB,CAA4B,UAAM,CAC9BJ,QAAQ,CAACF,qBAAqB,EAAtB,CAAR,CACH,CAFD,EAIH,CAP4B,EAAtB,CASP,MAAO,IAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAQC,QAAR,CAAkBC,QAAlB,QAA+B,UAACR,QAAD,CAAc,CAG9DZ,OAAO,CAAEiB,KAAT,CAAeC,KAAf,CAAsBC,QAAtB,CAAgCC,QAAhC,EAA0CJ,IAA1C,CAA+C,SAAAK,QAAQ,CAAI,CACvD,GAAGA,QAAQ,CAACC,IAAT,CAAcC,UAAd,GAA6B,CAAhC,CAAkC,CAC/BX,QAAQ,CAACV,eAAe,EAAhB,CAAR,CACF,CAFD,IAEO,CACH,GAAIsB,CAAAA,OAAO,CAAGH,QAAQ,CAACC,IAAT,CAAcG,QAAd,CAAuBC,MAAvB,CAAgC,CAAhC,CAAoCL,QAAQ,CAACC,IAAT,CAAcG,QAAd,CAAuB,CAAvB,CAApC,CAAgE,OAA9E,CACAb,QAAQ,CAACX,UAAU,CAAC,OAAD,CAAU,CAAC0B,MAAM,CAAE,cAAT,CAAV,CAAX,CAAR,CACH,CAEF,CARH,EASH,CAZoB,EAAd,CAgBP,cAAerB,CAAAA,UAAf","sourcesContent":["import { authAPI } from \"../../api/api\";\nimport {stopSubmit} from 'redux-forms/lib/reducer'\nimport {getAuthUserData} from './auth-reducer'\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n   initialized: false,\n   \n}\n\nconst appReducer = (state = initialState, action) => {\n    switch(action.type){\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state, \n                initialized: true,\n                  \n            }\n\n    default:\n        return\n    }\n}\n\nexport const setInitialisedSuccess = () => \n    ({type: INITIALIZED_SUCCESS});\n\nexport const initialiseApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n   \n    Promise.all([promise]).then(() => {\n        dispatch(setInitialisedSuccess())\n    })\n    \n}\n\nexport const login = (email, password, remember) => (dispatch) => {\n   \n        \n    authAPI .login(email, password, remember).then(response => {\n        if(response.data.resultCode === 0){\n           dispatch(getAuthUserData())\n        } else {\n            let messege = response.data.messages.length > 0 ? response.data.messages[0] : \"error\";\n            dispatch(stopSubmit('login', {_error: 'Common error'}));\n        }\n            \n      });\n}\n\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}
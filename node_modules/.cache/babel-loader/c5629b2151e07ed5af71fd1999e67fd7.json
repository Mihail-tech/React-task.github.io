{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem\";\nimport DialogMessage from \"./DialogMessage\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../redux/dialog-reducer';\nimport { reduxForm, Field } from 'redux-forms/lib/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let state = props.dialogPage;\n  let DialogsElement = state.DialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, dialog.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 60\n  }, this));\n  let MessangesElement = state.MessageData.map(messange => /*#__PURE__*/_jsxDEV(DialogMessage, {\n    messange: messange.messange\n  }, messange.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 62\n  }, this));\n  let newMessageBody = state.newMessageBody;\n\n  let onSendMessageClick = () => {\n    props.sendMessage();\n  };\n\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: '/login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogsItems,\n      children: DialogsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messanges,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", MessangesElement, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"addMessageFormRedux\", {\n        onSubmit: addNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\n\nconst addMessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"newMessageBody\",\n        placeholder: \"write text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\nconst addMessageFormRedux = reduxForm({\n  // a unique name for the form\n  formsReducer: 'dialogAddMessageForm'\n})(addMessageForm);\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Dialogs/Dialogs.jsx"],"names":["React","NavLink","Redirect","classes","DialogItem","DialogMessage","sendMessageCreator","updateNewMessageBodyCreator","reduxForm","Field","Dialogs","props","state","dialogPage","DialogsElement","DialogsData","map","dialog","name","id","MessangesElement","MessageData","messange","newMessageBody","onSendMessageClick","sendMessage","addNewMessage","values","isAuth","dialogs","dialogsItems","messanges","addMessageForm","handleSubmit","addMessageFormRedux","formsReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,EAA6BC,2BAA7B,QAAgE,yBAAhE;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAkC,yBAAlC;;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,MAAIC,KAAK,GAAGD,KAAK,CAACE,UAAlB;AAEA,MAAIC,cAAc,GAAGF,KAAK,CAACG,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBAAY,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+C,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1D,KAAoCF,MAAM,CAACE,EAA3C;AAAA;AAAA;AAAA;AAAA,UAAlC,CAArB;AAEA,MAAIC,gBAAgB,GAAGR,KAAK,CAACS,WAAN,CAAkBL,GAAlB,CAAsBM,QAAQ,iBAAI,QAAC,aAAD;AAAiC,IAAA,QAAQ,EAAEA,QAAQ,CAACA;AAApD,KAAoBA,QAAQ,CAACH,EAA7B;AAAA;AAAA;AAAA;AAAA,UAAlC,CAAvB;AAEA,MAAII,cAAc,GAAGX,KAAK,CAACW,cAA3B;;AAGA,MAAIC,kBAAkB,GAAG,MAAM;AAE3Bb,IAAAA,KAAK,CAACc,WAAN;AAEH,GAJD;;AAMA,MAAIC,aAAa,GAAIC,MAAD,IAAY;AAC5BhB,IAAAA,KAAK,CAACc,WAAN,CAAkBE,MAAM,CAACJ,cAAzB;AACH,GAFD;;AAIA,MAAG,CAACZ,KAAK,CAACiB,MAAV,EAAkB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAElB,sBACI;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAAC0B,OAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE1B,OAAO,CAAC2B,YAAxB;AAAA,gBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEX,OAAO,CAAC4B,SAAxB;AAAA,8BACI;AAAA,wBAAOX,gBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAqB,QAAA,QAAQ,EAAEM;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjCD;;KAAMhB,O;;AAoCN,MAAMsB,cAAc,GAAIrB,KAAD,IAAW;AAC9B,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACsB,YAAtB;AAAA,4BACI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAC,gBAAjC;AAAkD,QAAA,WAAW,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,mCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;AAYA,MAAMC,mBAAmB,GAAG1B,SAAS,CAAC;AAClC;AACA2B,EAAAA,YAAY,EAAE;AAFoB,CAAD,CAAT,CAGvBH,cAHuB,CAA5B;AAMA,eAAetB,OAAf","sourcesContent":["import React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem\"\nimport DialogMessage from \"./DialogMessage\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../redux/dialog-reducer';\nimport { reduxForm, Field }  from 'redux-forms/lib/reducer'\n\n\n\n\nconst Dialogs = (props) => {\n    let state = props.dialogPage;\n\n    let DialogsElement = state.DialogsData.map((dialog) => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\n\n    let MessangesElement = state.MessageData.map(messange => <DialogMessage key={messange.id} messange={messange.messange}/>)\n\n    let newMessageBody = state.newMessageBody;\n\n\n    let onSendMessageClick = () => {\n\n        props.sendMessage();\n\n    }\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    if(!props.isAuth) return <Redirect to={'/login'}/>\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                {DialogsElement}\n            </div>\n            <div className={classes.messanges}>\n                <div> {MessangesElement} </div>\n                <addMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\n\nconst addMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} >\n            <div> \n                <Field component='textarea' name='newMessageBody' placeholder='write text' />\n            </div>\n            <div> <button >click</button>  </div>\n        </form>\n    )\n}\n\n\nconst addMessageFormRedux = reduxForm({\n    // a unique name for the form\n    formsReducer: 'dialogAddMessageForm'\n  })(addMessageForm)\n\n\nexport default Dialogs;\n\n"]},"metadata":{},"sourceType":"module"}
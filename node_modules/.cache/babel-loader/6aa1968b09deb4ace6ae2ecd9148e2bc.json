{"ast":null,"code":"import React from 'react';\nimport dialogReducer from './dialog-reducer';\nimport profileReducer from './profile-reducer';\nconst ADD_POST = 'ADD_POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      PostsData: [{\n        id: 1,\n        messange: \"hi\",\n        like: 12\n      }, {\n        id: 2,\n        messange: \"hi\",\n        like: 23\n      }],\n      newPostText: \"what happen?\"\n    },\n    dialogPage: {\n      DialogsData: [{\n        id: 1,\n        name: \"Mike\"\n      }, {\n        id: 2,\n        name: \"Vlad\"\n      }, {\n        id: 3,\n        name: \"Petr\"\n      }, {\n        id: 4,\n        name: \"Nastya\"\n      }, {\n        id: 5,\n        name: \"Artem\"\n      }],\n      MessageData: [{\n        id: 1,\n        messange: \"hi\"\n      }, {\n        id: 2,\n        messange: \"hi\"\n      }, {\n        id: 3,\n        messange: \"hi\"\n      }, {\n        id: 4,\n        messange: \"hi\"\n      }, {\n        id: 5,\n        messange: \"hi\"\n      }],\n      newMessageBody: \"\"\n    },\n    sidebar: {}\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _callSubscriber() {\n    console.log('state is changed');\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n    this._state.dialogPage = dialogReducer(this._state.dialogPage, action);\n    this._state.sidebar = dialogReducer(this._state.sid, action);\n\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        like: 0\n      };\n\n      this._state.profilePage.PostsData.push(newPost);\n\n      this._state.profilePage.newPostText = ' ';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogPage.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogPage.newMessageBody;\n      this._state.dialogPage.newMessageBody = '';\n\n      this._state.dialogPage.MessageData.push({\n        id: 6,\n        messange: body\n      });\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: body\n});\nexport default store;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/redux/state.js"],"names":["React","dialogReducer","profileReducer","ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","PostsData","id","messange","like","newPostText","dialogPage","DialogsData","name","MessageData","newMessageBody","sidebar","getState","_callSubscriber","console","log","subscribe","observer","dispatch","action","sid","type","newPost","message","push","newText","body","addPostActionCreator","updateNewPostTextActionCreator","text","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dialogReducer from './dialog-reducer';\nimport profileReducer from './profile-reducer';\n\n\nconst ADD_POST = 'ADD_POST';\nconst UPDATE_NEW_POST_TEXT ='UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet store = {\n    _state : {\n        profilePage: {\n            PostsData:[\n                {id:1, messange:\"hi\", like:12},\n                {id:2, messange:\"hi\", like:23}\n            ],\n            newPostText : \"what happen?\"\n        },\n        dialogPage: {\n            DialogsData:[\n                {id:1, name:\"Mike\"},\n                {id:2, name:\"Vlad\"},\n                {id:3, name:\"Petr\"},\n                {id:4, name:\"Nastya\"},\n                {id:5, name:\"Artem\"}\n                \n            ],\n            MessageData:[\n                {id:1, messange:\"hi\"},\n                {id:2, messange:\"hi\"},\n                {id:3, messange:\"hi\"},\n                {id:4, messange:\"hi\"},\n                {id:5, messange:\"hi\"}\n            ],\n            newMessageBody: \"\"\n        },\n        sidebar: {}\n    },\n    getState () {\n        return this._state;\n    },\n    _callSubscriber() {\n        console.log('state is changed')\n    },\n    \n     subscribe (observer) {\n        this._callSubscriber = observer;\n    },\n    dispatch(action){\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\n        this._state.dialogPage = dialogReducer(this._state.dialogPage, action)\n        this._state.sidebar = dialogReducer(this._state.sid, action)\n        \n\n        if(action.type === 'ADD-POST'){\n            let newPost = {\n                id:5,\n                message: this._state.profilePage.newPostText,\n                like: 0\n            };\n            this._state.profilePage.PostsData.push(newPost)\n            this._state.profilePage.newPostText = ' ';\n            this._callSubscriber(this._state);\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT'){\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY){\n            this._state.dialogPage.newMessageBody = action.body;\n            this._callSubscriber(this._state);\n        }else if (action.type === SEND_MESSAGE){\n            let body = this._state.dialogPage.newMessageBody;\n            this._state.dialogPage.newMessageBody = '';\n            this._state.dialogPage.MessageData.push({id:6, messange: body});\n            this._callSubscriber(this._state);\n        }\n    },\n  \n    \n}\n\nexport const addPostActionCreator = () => {\n   \n    return {type: ADD_POST}\n};\nexport const updateNewPostTextActionCreator = (text) => {\n    return {type: UPDATE_NEW_POST_TEXT, newText: text}\n};\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\nexport const updateNewMessageBodyCreator = (body) => ({type:UPDATE_NEW_MESSAGE_BODY, body:body})\n\n\n\n\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}
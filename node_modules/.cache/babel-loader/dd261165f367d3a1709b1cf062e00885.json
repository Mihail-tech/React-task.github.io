{"ast":null,"code":"import React from 'react';\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../redux/dialog-reducer';\nimport { connect } from 'react-redux';\nimport Dialogs from './Dialogs';\n\nlet mapStateToProps = state => {\n  return {\n    dialogPage: state.dialogPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","sendMessageCreator","updateNewMessageBodyCreator","connect","Dialogs","mapStateToProps","state","dialogPage","isAuth","auth","mapDispatchToProps","dispatch","updateNewMessageBody","body","sendMessage","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,EAA6BC,2BAA7B,QAAgE,yBAAhE;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAMA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,UAAU,EAAED,KAAK,CAACC,UADf;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAMA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAACF,MAAAA,QAAQ,CAACT,2BAA2B,CAACW,IAAD,CAA5B,CAAR;AAA4C,KAD1E;AAEHC,IAAAA,WAAW,EAAE,MAAO;AAACH,MAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AAA+B;AAFjD,GAAP;AAIH,CALD;;AAWA,MAAMc,gBAAgB,GAAGZ,OAAO,CAACE,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CN,OAA7C,CAAzB;AAEA,eAAeW,gBAAf","sourcesContent":["import React from 'react';\n\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../redux/dialog-reducer';\n\nimport { connect } from 'react-redux';\nimport Dialogs from './Dialogs';\n\n\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogPage: state.dialogPage,\n        isAuth: state.auth.isAuth\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessageBody: (body) => {dispatch(updateNewMessageBodyCreator(body))},\n        sendMessage: () =>  {dispatch(sendMessageCreator())}\n    }\n}\n\n\n\n\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;\n\n"]},"metadata":{},"sourceType":"module"}
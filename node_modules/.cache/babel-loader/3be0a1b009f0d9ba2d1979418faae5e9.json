{"ast":null,"code":"import _toConsumableArray from\"/Users/itshatle/Desktop/rest/reac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import Post1 from'../Post/Post1';import classes from\"./PostInfo.module.css\";import{reduxForm,Field}from'redux-forms/lib/reducer';import{maxLengthCreator,required}from'../../../helper/validator/validators';import{Textarea}from'../../common/Preloader/FormsControls/FormsControls';import{form}from'redux-forms/lib/containers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostInfo=/*#__PURE__*/React.memo(function(props){var PostsElement=_toConsumableArray(props.PostsData).revers().map(function(post){return/*#__PURE__*/_jsx(Post1,{messange:post.messange,like:post.like});});var newPostElement=/*#__PURE__*/React.createRef();var onAddPost=function onAddPost(values){props.addPost(values.newPostText);};return/*#__PURE__*/_jsxs(\"div\",{className:classes.postsBlock,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"My posts\"}),/*#__PURE__*/_jsx(LoginReduxFrom,{onSubmit:onAddPost}),/*#__PURE__*/_jsxs(\"div\",{className:classes.posts,children:[\"posts\",PostsElement]})]});});var maxLength=maxLengthCreator(15);var addNewPostForm=function addNewPostForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{name:\"newPostText\",component:Textarea,placeholder:\"post message\",validate:[required,maxLength]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Send\"})})]});};var LoginReduxFrom=reduxForm({// a unique name for the form\nformsReducer:'ProfileAddNewPostForm'})(addNewPostForm);export default PostInfo;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Profile/PostInfo/PostInfo.jsx"],"names":["React","Post1","classes","reduxForm","Field","maxLengthCreator","required","Textarea","form","PostInfo","memo","props","PostsElement","PostsData","revers","map","post","messange","like","newPostElement","createRef","onAddPost","values","addPost","newPostText","postsBlock","posts","maxLength","addNewPostForm","handleSubmit","LoginReduxFrom","formsReducer"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAkC,yBAAlC,CACA,OAASC,gBAAT,CAA2BC,QAA3B,KAA2C,sCAA3C,CACA,OAASC,QAAT,KAAyB,oDAAzB,CACA,OAASC,IAAT,KAAqB,4BAArB,C,wFAKA,GAAMC,CAAAA,QAAQ,cAAGT,KAAK,CAACU,IAAN,CAAW,SAAAC,KAAK,CAAI,CAGjC,GAAIC,CAAAA,YAAY,CAAG,mBAAID,KAAK,CAACE,SAAV,EACdC,MADc,GAEdC,GAFc,CAET,SAAAC,IAAI,qBACN,KAAC,KAAD,EAAO,QAAQ,CAAEA,IAAI,CAACC,QAAtB,CAAgC,IAAI,CAAED,IAAI,CAACE,IAA3C,EADM,EAFK,CAAnB,CAMA,GAAIC,CAAAA,cAAc,cAAGnB,KAAK,CAACoB,SAAN,EAArB,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CACxBX,KAAK,CAACY,OAAN,CAAcD,MAAM,CAACE,WAArB,EAGH,CAJD,CAOA,mBACI,aAAK,SAAS,CAAEtB,OAAO,CAACuB,UAAxB,wBACI,gCADJ,cAEI,KAAC,cAAD,EAAgB,QAAQ,CAAEJ,SAA1B,EAFJ,cAGI,aAAK,SAAS,CAAEnB,OAAO,CAACwB,KAAxB,mBAEKd,YAFL,GAHJ,GADJ,CAUH,CA5BgB,CAAjB,CA+BA,GAAMe,CAAAA,SAAS,CAAGtB,gBAAgB,CAAC,EAAD,CAAlC,CAEA,GAAMuB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACjB,KAAD,CAAW,CAC9B,mBACI,cAAM,QAAQ,CAAEA,KAAK,CAACkB,YAAtB,wBACI,kCACI,KAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,CAA0B,SAAS,CAAEtB,QAArC,CAA+C,WAAW,CAAE,cAA5D,CACA,QAAQ,CAAE,CAACD,QAAD,CAAWqB,SAAX,CADV,EADJ,EADJ,cAKK,kCACG,gCADH,EALL,GADJ,CAWH,CAZD,CAeA,GAAMG,CAAAA,cAAc,CAAG3B,SAAS,CAAE,CAC9B;AACA4B,YAAY,CAAE,uBAFgB,CAAF,CAAT,CAIlBH,cAJkB,CAAvB,CAOA,cAAenB,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport Post1 from '../Post/Post1';\nimport classes from \"./PostInfo.module.css\"\nimport { reduxForm, Field }  from 'redux-forms/lib/reducer'\nimport { maxLengthCreator, required } from '../../../helper/validator/validators';\nimport { Textarea } from '../../common/Preloader/FormsControls/FormsControls';\nimport { form } from 'redux-forms/lib/containers';\n\n\n\n\nconst PostInfo = React.memo(props => {\n\n\n    let PostsElement = [...props.PostsData]\n        .revers()\n        .map( post => \n            <Post1 messange={post.messange} like={post.like}/> \n    );\n\n    let newPostElement = React.createRef();\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText)\n        \n       \n    }\n\n\n    return (\n        <div className={classes.postsBlock}>\n            <h3>My posts</h3>\n            <LoginReduxFrom onSubmit={onAddPost} />\n            <div className={classes.posts}>\n                posts\n                {PostsElement}\n            </div>\n        </div>\n    )\n})\n\n\nconst maxLength = maxLengthCreator(15)\n\nconst addNewPostForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit} >\n            <div>\n                <Field name='newPostText' component={Textarea} placeholder={\"post message\"}\n                validate={[required, maxLength]} />\n            </div>\n             <div>\n                <button >Send</button>\n             </div>\n        </form>\n    )\n}\n\n\nconst LoginReduxFrom = reduxForm ({\n    // a unique name for the form\n    formsReducer: 'ProfileAddNewPostForm'\n    \n  })(addNewPostForm)\n\n\nexport default PostInfo;"]},"metadata":{},"sourceType":"module"}
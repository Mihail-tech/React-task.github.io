{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/hoc/withAuthRedirect.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 43\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let mapStateToPropsForRedirect = state => {\n    return {\n      isAuth: state.props.isAuth\n    };\n  };\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\n  return RedirectComponent;\n};","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/hoc/withAuthRedirect.jsx"],"names":["React","Component","Redirect","withAuthRedirect","RedirectComponent","render","props","isAuth","mapStateToPropsForRedirect","state","ConnectedAuthRedirectComponent","connect","AuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,OAAO,MAAMC,gBAAgB,GAAIF,SAAD,IAAe;AAC3C,QAAMG,iBAAN,SAAgCJ,KAAK,CAACC,SAAtC,CAAgD;AAC5CI,IAAAA,MAAM,GAAG;AACL,UAAG,CAAC,KAAKC,KAAL,CAAWC,MAAf,EAAuB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACvB,0BAAO,QAAC,SAAD,OAAe,KAAKD;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAOhD,MAAIE,0BAA0B,GAAIC,KAAD,IAAW;AACxC,WAAO;AAEHF,MAAAA,MAAM,EAAEE,KAAK,CAACH,KAAN,CAAYC;AAFjB,KAAP;AAIH,GALD;;AAOA,MAAIG,8BAA8B,GAAGC,OAAO,CAACH,0BAAD,CAAP,CAAoCI,qBAApC,CAArC;AAGA,SAAOR,iBAAP;AACH,CAnBM","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props} />\n        }\n    }\n\n    let mapStateToPropsForRedirect = (state) => {\n        return {\n            \n            isAuth: state.props.isAuth\n        }\n    }\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\n\n\n    return RedirectComponent;\n}"]},"metadata":{},"sourceType":"module"}
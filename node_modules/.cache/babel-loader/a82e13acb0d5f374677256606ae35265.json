{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import{reduxForm,Field}from'redux-forms/lib/reducer';import{required}from'../../helper/validator/validators';import{Input}from'../common/Preloader/FormsControls/FormsControls';import login from'../redux/auth-reducer';import classes from'../common/Preloader/FormsControls/FormsControls.module.css';//import { Field, reduxForm } from 'redux-form'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:'Email',name:'email',component:Input,validate:[required]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:'password',name:'password',component:Input,validate:[required],type:'password'})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,{type:'checkbox',name:'remember',component:Input}),\" remember\"]}),props.error&&/*#__PURE__*/_jsx(\"div\",{className:classes.formSummaryError,children:props.error}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Login\"})})]});};var LoginReduxFrom=reduxForm({// a unique name for the form\nformsReducer:'login'})(LoginForm);var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.remember);};if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:\"/profile\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(LoginReduxFrom,{onSubmit:onSubmit})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","reduxForm","Field","required","Input","login","classes","LoginForm","props","handleSubmit","error","formSummaryError","LoginReduxFrom","formsReducer","Login","onSubmit","formData","email","password","remember","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAkC,yBAAlC,CACA,OAASC,QAAT,KAAyB,mCAAzB,CACA,OAASC,KAAT,KAAsB,iDAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4DAApB,CACA;wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,mBACQ,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACI,kCACI,KAAC,KAAD,EAAO,WAAW,CAAE,OAApB,CAA6B,IAAI,CAAE,OAAnC,CAA4C,SAAS,CAAEL,KAAvD,CAA8D,QAAQ,CAAE,CAACD,QAAD,CAAxE,EADJ,EADJ,cAII,kCACI,KAAC,KAAD,EAAO,WAAW,CAAE,UAApB,CAAgC,IAAI,CAAE,UAAtC,CAAkD,SAAS,CAAEC,KAA7D,CAAoE,QAAQ,CAAE,CAACD,QAAD,CAA9E,CAA0F,IAAI,CAAE,UAAhG,EADJ,EAJJ,cAOI,oCACI,KAAC,KAAD,EAAO,IAAI,CAAE,UAAb,CAAyB,IAAI,CAAE,UAA/B,CAA2C,SAAS,CAAEC,KAAtD,EADJ,eAPJ,CAUKI,KAAK,CAACE,KAAN,eAAe,YAAK,SAAS,CAAEJ,OAAO,CAACK,gBAAxB,UACXH,KAAK,CAACE,KADK,EAVpB,cAaI,kCACI,iCADJ,EAbJ,GADR,CAmBH,CApBD,CAuBA,GAAME,CAAAA,cAAc,CAAGX,SAAS,CAAC,CAC7B;AACAY,YAAY,CAAE,OAFe,CAAD,CAAT,CAGlBN,SAHkB,CAAvB,CAMA,GAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACN,KAAD,CAAW,CACrB,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BR,KAAK,CAACH,KAAN,CAAYW,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,QAAxD,EACH,CAFD,CAIA,GAAGX,KAAK,CAACY,MAAT,CAAiB,CACb,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CACD,mBACI,oCACI,6BADJ,cAII,KAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAJJ,GADJ,CAQH,CAhBD,CAmBA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADa,CAAZ,EAAxB,CAIA,cAAerB,CAAAA,OAAO,CAACsB,eAAD,CAAkB,CAAChB,KAAK,CAALA,KAAD,CAAlB,CAAP,CAAmCS,KAAnC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm, Field }  from 'redux-forms/lib/reducer'\nimport { required } from '../../helper/validator/validators';\nimport { Input } from '../common/Preloader/FormsControls/FormsControls';\nimport login from '../redux/auth-reducer'\nimport classes from '../common/Preloader/FormsControls/FormsControls.module.css'\n//import { Field, reduxForm } from 'redux-form'\n\nconst LoginForm = (props) => {\n    return (\n            <form onSubmit={props.handleSubmit} >\n                <div>\n                    <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]} />\n                </div>\n                <div>\n                    <Field placeholder={'password'} name={'password'} component={Input} validate={[required]} type={'password'}/>\n                </div>\n                <div>\n                    <Field type={'checkbox'} name={'remember'} component={Input} /> remember\n                </div>\n                {props.error && <div className={classes.formSummaryError} >\n                    {props.error}\n                </div>}\n                <div>\n                    <button>Login</button>\n                </div>\n            </form>\n    )\n}\n\n\nconst LoginReduxFrom = reduxForm({\n    // a unique name for the form\n    formsReducer: 'login'\n  })(LoginForm)\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.remember)\n    }\n\n    if(props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n    return (\n        <div>\n            <h1>\n                Login\n            </h1>\n            <LoginReduxFrom onSubmit={onSubmit} />\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login}) (Login) ;"]},"metadata":{},"sourceType":"module"}
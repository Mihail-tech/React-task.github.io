{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/components/Recomendation/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, setTotalUsersCount, setUsers, toggleIsFetching, unfollow } from '../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport preloader from \"../../assers/img/loading.svg\";\nimport Preloader from '../common/Preloader/Preloader';\nimport { getUsers } from '../../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // const mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         serUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountAC(totalCount))\n//         },\n//         toggleIsFetchingAc: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Recomendation/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","setTotalUsersCount","setUsers","toggleIsFetching","unfollow","axios","Users","Preloader","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { follow, \n    setCurrentPage, \n    setTotalUsersCount, \n    setUsers, \n    toggleIsFetching, \n    unfollow } from '../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users'\nimport preloader from '../../assers/img/loading.svg';\nimport Preloader from '../common/Preloader/Preloader';\nimport { getUsers } from '../../api/api';\n\n\n\nclass UsersContainer extends React.Component  {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n\n         getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n\n            this.props.toggleIsFetching(false)    \n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount);\n        });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true)\n        \n        getUsers(pageNumber, this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false)   \n            this.props.setUsers(data.items)\n        \n        });\n    }\n\n\n    render () { \n        return <>\n        {this.props.isFetching ? <Preloader /> : null}\n            <Users \n                totalUsersCount={this.props.totalUsersCount}\n                pageSize = {this.props.pageSize}\n                currentPage = {this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                users= {this.props.users}\n                follow= {this.props.follow}\n                unfollow= {this.props.unfollow}\n            />\n        </>\n         \n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         serUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountAC(totalCount))\n//         },\n//         toggleIsFetchingAc: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\nexport default connect(mapStateToProps,  {\n        follow,\n        unfollow,\n        setUsers,\n        setCurrentPage,\n        setTotalUsersCount,\n        toggleIsFetching\n}\n)(UsersContainer) ;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/components/Recomendation/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC } from '../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    serUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Recomendation/UsersContainer.jsx"],"names":["React","connect","followAC","setCurrentPageAC","setTotalUsersCountAC","setUsersAC","unfollowAC","axios","Users","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","isFetching","mapDispatchToProps","dispatch","userId","serUsers"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { followAC, \n    setCurrentPageAC, \n    setTotalUsersCountAC, \n    setUsersAC, \n    unfollowAC } from '../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users'\n\n\n\nclass UsersContainer extends React.Component  {\n\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n                \n            this.props.setUsers(response.data.items);\n            this.props.setTotalUsersCount(response.data.totalCount);\n        });\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n                \n            this.props.setUsers(response.data.items)\n        \n        });\n    }\n\n\n    render () { \n        return <Users \n        totalUsersCount={this.props.totalUsersCount}\n        pageSize = {this.props.pageSize}\n        currentPage = {this.props.currentPage}\n        onPageChanged={this.onPageChanged}\n        users= {this.props.users}\n        follow= {this.props.follow}\n        unfollow= {this.props.unfollow}\n        />\n         \n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId))\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId))\n        },\n        serUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountAC(totalCount))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer) ;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm, Field } from 'redux-forms/lib/reducer';\nimport { required } from '../../helper/validator/validators';\nimport { Input } from '../common/Preloader/FormsControls/FormsControls';\nimport login from '../redux/auth-reducer'; //import { Field, reduxForm } from 'redux-form'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'Email',\n        name: 'email',\n        component: Input,\n        validate: [required]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'password',\n        name: 'password',\n        component: Input,\n        validate: [required],\n        type: 'password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: 'checkbox',\n        name: 'remember',\n        component: Input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), \" remember\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxFrom = reduxForm({\n  // a unique name for the form\n  formsReducer: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.remember);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxFrom, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","reduxForm","Field","required","Input","login","LoginForm","props","handleSubmit","LoginReduxFrom","formsReducer","Login","onSubmit","formData","email","password","remember","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAkC,yBAAlC;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,SAASC,KAAT,QAAsB,iDAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CACA;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,sBACQ;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,OAApB;AAA6B,QAAA,IAAI,EAAE,OAAnC;AAA4C,QAAA,SAAS,EAAEJ,KAAvD;AAA8D,QAAA,QAAQ,EAAE,CAACD,QAAD;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,UAApB;AAAgC,QAAA,IAAI,EAAE,UAAtC;AAAkD,QAAA,SAAS,EAAEC,KAA7D;AAAoE,QAAA,QAAQ,EAAE,CAACD,QAAD,CAA9E;AAA0F,QAAA,IAAI,EAAE;AAAhG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,UAAb;AAAyB,QAAA,IAAI,EAAE,UAA/B;AAA2C,QAAA,SAAS,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAgBH,CAjBD;;KAAME,S;AAoBN,MAAMG,cAAc,GAAGR,SAAS,CAAC;AAC7B;AACAS,EAAAA,YAAY,EAAE;AAFe,CAAD,CAAT,CAGlBJ,SAHkB,CAAvB;;AAMA,MAAMK,KAAK,GAAIJ,KAAD,IAAW;AACrB,QAAMK,QAAQ,GAAIC,QAAD,IAAc;AAC3BN,IAAAA,KAAK,CAACF,KAAN,CAAYQ,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,QAAxD;AACH,GAFD;;AAIA,MAAGT,KAAK,CAACU,MAAT,EAAiB;AACb,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEL;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhBD;;MAAMD,K;;AAmBN,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADa,CAAZ,CAAxB;;AAIA,eAAelB,OAAO,CAACmB,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAmCM,KAAnC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm, Field }  from 'redux-forms/lib/reducer'\nimport { required } from '../../helper/validator/validators';\nimport { Input } from '../common/Preloader/FormsControls/FormsControls';\nimport login from '../redux/auth-reducer'\n//import { Field, reduxForm } from 'redux-form'\n\nconst LoginForm = (props) => {\n    return (\n            <form onSubmit={props.handleSubmit} >\n                <div>\n                    <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]} />\n                </div>\n                <div>\n                    <Field placeholder={'password'} name={'password'} component={Input} validate={[required]} type={'password'}/>\n                </div>\n                <div>\n                    <Field type={'checkbox'} name={'remember'} component={Input} /> remember\n                </div>\n                <div>\n                    <button>Login</button>\n                </div>\n            </form>\n    )\n}\n\n\nconst LoginReduxFrom = reduxForm({\n    // a unique name for the form\n    formsReducer: 'login'\n  })(LoginForm)\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.remember)\n    }\n\n    if(props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n    return (\n        <div>\n            <h1>\n                Login\n            </h1>\n            <LoginReduxFrom onSubmit={onSubmit} />\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login}) (Login) ;"]},"metadata":{},"sourceType":"module"}
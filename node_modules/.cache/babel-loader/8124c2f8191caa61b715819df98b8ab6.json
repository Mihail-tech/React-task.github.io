{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/components/common/Preloader/FormsControls/FormsControls.js\";\nimport React from 'react';\nimport classes from './FormsControls.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formControl = props => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formControl + '' + (hasError ? classes.error : \"\"),\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", { ...input,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\nexport const Textarea = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formControl + '' + (hasError ? classes.error : \"\"),\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", { ...input,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Textarea;\nexport const Input = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formControl + '' + (hasError ? classes.error : \"\"),\n    children: /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Textarea\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/common/Preloader/FormsControls/FormsControls.js"],"names":["React","classes","formControl","props","hasError","meta","touched","error","input","Textarea","Input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,GAAGC,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACC,WAAR,GAAsB,EAAtB,IAA4BE,QAAQ,GAAIH,OAAO,CAACM,KAAZ,GAAoB,EAAxD,CAAhB;AAAA,2BACI,yBAAcC,KAAd;AAAA,SAAyBL;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CATD;;AAcA,OAAO,MAAMM,QAAQ,GAAG,CAAC;AAACD,EAAAA,KAAD;AAAQH,EAAAA,IAAR;AAAc,KAAGF;AAAjB,CAAD,KAA6B;AACjD,QAAMC,QAAQ,GAAGC,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACC,WAAR,GAAsB,EAAtB,IAA4BE,QAAQ,GAAIH,OAAO,CAACM,KAAZ,GAAoB,EAAxD,CAAhB;AAAA,2BACI,yBAAcC,KAAd;AAAA,SAAyBL;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CATM;KAAMM,Q;AAWb,OAAO,MAAMC,KAAK,GAAG,CAAC;AAACF,EAAAA,KAAD;AAAQH,EAAAA,IAAR;AAAc,KAAGF;AAAjB,CAAD,KAA6B;AAC9C,QAAMC,QAAQ,GAAGC,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACC,WAAR,GAAsB,EAAtB,IAA4BE,QAAQ,GAAIH,OAAO,CAACM,KAAZ,GAAoB,EAAxD,CAAhB;AAAA,2BACI,sBAAWC,KAAX;AAAA,SAAsBL;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CATM;MAAMO,K","sourcesContent":["import React from 'react';\nimport classes from './FormsControls.module.css'\n\n\n\nconst formControl = (props) => {\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={classes.formControl + '' + (hasError ?  classes.error : \"\")} >\n            <textarea {...input} {...props} />\n\n        </div>\n    )\n}\n\n\n\n\nexport const Textarea = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={classes.formControl + '' + (hasError ?  classes.error : \"\")} >\n            <textarea {...input} {...props} />\n\n        </div>\n    )\n}\n\nexport const Input = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={classes.formControl + '' + (hasError ?  classes.error : \"\")} >\n            <input {...input} {...props} />\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}
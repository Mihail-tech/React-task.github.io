{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: [{\n    id: 1,\n    fullName: 'Mike',\n    followed: false,\n    status: 'hey',\n    location: {\n      city: 'Minsk',\n      country: 'Belarus'\n    }\n  }, {\n    id: 2,\n    fullName: 'Lena',\n    followed: true,\n    status: 'I am super',\n    location: {\n      city: 'Minsk',\n      country: 'Belarus'\n    }\n  }, {\n    id: 3,\n    fullName: 'Jorg',\n    followed: false,\n    status: 'Not follow me',\n    location: {\n      city: 'Minsk',\n      country: 'Belarus'\n    }\n  }, {\n    id: 1,\n    fullName: 'Kir',\n    followed: true,\n    status: 'I am going to vacation',\n    location: {\n      city: 'Minsk',\n      country: 'Belarus'\n    }\n  }]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(users => {\n          if (users.id === acation.userId) {\n            return { ...users,\n              followed: true\n            };\n          }\n\n          return users;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(users => {\n          if (users.id === acation.userId) {\n            return { ...users,\n              followed: false\n            };\n          }\n\n          return users;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","id","fullName","followed","status","location","city","country","usersReducer","state","action","type","map","acation","userId","followAC","unfollowAC","setUsersAC"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS'\n\n\nlet initialState = {\n    users:  [\n        {id:1, \n            fullName: 'Mike',\n            followed: false,\n             status: 'hey', \n             location:{\n                    city:'Minsk', \n                    country: 'Belarus'\n                }\n        },\n        {id:2, \n            fullName: 'Lena',\n            followed: true,\n             status: 'I am super', \n             location:{\n                    city:'Minsk', \n                    country: 'Belarus'\n                }\n        },\n        {id:3, \n            fullName: 'Jorg',\n            followed: false,\n             status: 'Not follow me', \n             location:{\n                    city:'Minsk', \n                    country: 'Belarus'\n                }\n        },\n        {id:1, \n            fullName: 'Kir',\n            followed: true,\n             status: 'I am going to vacation', \n             location:{\n                    city:'Minsk', \n                    country: 'Belarus'\n                }\n        },\n    ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return {\n                ...state, \n                users: state.users.map(users => {\n                    if(users.id === acation.userId) {\n                        return {...users, followed: true}\n                    }\n                    return users\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state, \n                users: state.users.map(users => {\n                    if(users.id === acation.userId) {\n                        return {...users, followed: false}\n                    }\n                    return users\n                })\n            }\n        \n        case SET_USERS: \n        return {\n            ...state, \n            users: [...state.users, ...action.users]\n        }\n\n    default:\n        return\n    }\n}\n\nexport const followAC = (userId) => ({type: FOLLOW, userId});\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsersAC = (users) => ({type:SET_USERS, users})\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}
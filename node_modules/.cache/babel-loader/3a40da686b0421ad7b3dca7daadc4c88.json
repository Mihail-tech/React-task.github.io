{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  //0\n  currentPage: 1,\n  isFetching: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(users => {\n          if (users.id === action.userId) {\n            return { ...users,\n              followed: true\n            };\n          }\n\n          return users;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(users => {\n          if (users.id === action.userId) {\n            return { ...users,\n              followed: false\n            };\n          }\n\n          return users;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    default:\n      return;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCountAC = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","id","userId","followed","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAGA,IAAIC,YAAY,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,QAAQ,EAAE,CAFM;AAGhBC,EAAAA,eAAe,EAAE,CAHD;AAGI;AACpBC,EAAAA,WAAW,EAAE,CAJG;AAKhBC,EAAAA,UAAU,EAAE;AALI,CAAnB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,MAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,GAAZ,CAAgBT,KAAK,IAAI;AAC5B,cAAGA,KAAK,CAACU,EAAN,KAAaH,MAAM,CAACI,MAAvB,EAA+B;AAC3B,mBAAO,EAAC,GAAGX,KAAJ;AAAWY,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACH;;AACD,iBAAOZ,KAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKN,QAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,GAAZ,CAAgBT,KAAK,IAAI;AAC5B,cAAGA,KAAK,CAACU,EAAN,KAAaH,MAAM,CAACI,MAAvB,EAA+B;AAC3B,mBAAO,EAAC,GAAGX,KAAJ;AAAWY,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACH;;AACD,iBAAOZ,KAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKL,SAAL;AACA,aAAO,EACH,GAAGW,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACP;AAFX,OAAP;;AAIA,SAAKJ,gBAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACJ;AAFjB,OAAP;;AAIJ,SAAKN,qBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,eAAe,EAAEK,MAAM,CAACL;AAFrB,OAAP;;AAKR;AACI;AAxCJ;AA0CH,CA3CD;;AA6CA,OAAO,MAAMW,QAAQ,GAAIF,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEf,MAAP;AAAekB,EAAAA;AAAf,CAAb,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEd,QAAP;AAAiBiB,EAAAA;AAAjB,CAAb,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIf,KAAD,KAAY;AAACQ,EAAAA,IAAI,EAACb,SAAN;AAAiBK,EAAAA;AAAjB,CAAZ,CAAnB;AACP,OAAO,MAAMgB,gBAAgB,GAAIb,WAAD,KAAkB;AAACK,EAAAA,IAAI,EAACZ,gBAAN;AAAwBO,EAAAA;AAAxB,CAAlB,CAAzB;AACP,OAAO,MAAMc,oBAAoB,GAAIf,eAAD,KAAsB;AAACM,EAAAA,IAAI,EAACX,qBAAN;AAA6BK,EAAAA;AAA7B,CAAtB,CAA7B;AAEP,eAAeG,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\n\n\nlet initialState = {\n   users: [ ],\n   pageSize: 5,\n   totalUsersCount: 0, //0\n   currentPage: 1,\n   isFetching: false\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return {\n                ...state, \n                users: state.users.map(users => {\n                    if(users.id === action.userId) {\n                        return {...users, followed: true}\n                    }\n                    return users\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state, \n                users: state.users.map(users => {\n                    if(users.id === action.userId) {\n                        return {...users, followed: false}\n                    }\n                    return users\n                })\n            }\n        \n        case SET_USERS: \n        return {\n            ...state, \n            users: action.users\n        }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount\n            }\n\n    default:\n        return\n    }\n}\n\nexport const followAC = (userId) => ({type: FOLLOW, userId});\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsersAC = (users) => ({type:SET_USERS, users});\nexport const setCurrentPageAC = (currentPage) => ({type:SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCountAC = (totalUsersCount) => ({type:SET_TOTAL_USERS_COUNT, totalUsersCount})\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { authAPI } from \"../../api/api\";\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      return;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_AUTH_USER_DATA,\n  pay: {\n    userId,\n    email,\n    login\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  authAPI.me().then(response => {\n    if (response.data.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = response.data.data;\n      dispatch(setAuthUserData(id, email, login));\n    }\n  });\n};\nexport const login = (email, password, remember) => dispatch => {\n  authAPI.login(email, password, remember).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/redux/auth-reducer.js"],"names":["authAPI","SET_AUTH_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","pay","getAuthUserData","dispatch","me","then","response","resultCode","id","password","remember","logout"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AAGA,IAAIC,YAAY,GAAG;AAChBC,EAAAA,MAAM,EAAE,IADQ;AAEhBC,EAAAA,KAAK,EAAE,IAFS;AAGhBC,EAAAA,KAAK,EAAE,IAHS;AAIhBC,EAAAA,MAAM,EAAE;AAJQ,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,kBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHL,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAMR;AACI;AATJ;AAWH,CAZD;;AAcA,OAAO,MAAMM,eAAe,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,MAA2B;AAACK,EAAAA,IAAI,EAAET,kBAAP;AAA2BY,EAAAA,GAAG,EAAC;AAACV,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB;AAA/B,CAA3B,CAAxB;AACP,OAAO,MAAMS,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC/Cf,EAAAA,OAAO,CAAEgB,EAAT,GAAcC,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,QAAGA,QAAQ,CAACP,IAAT,CAAcQ,UAAd,KAA6B,CAAhC,EAAkC;AAC9B,UAAI;AAACC,QAAAA,EAAD;AAAKhB,QAAAA,KAAL;AAAYC,QAAAA;AAAZ,UAAqBa,QAAQ,CAACP,IAAT,CAAcA,IAAvC;AACFI,MAAAA,QAAQ,CAACH,eAAe,CAACQ,EAAD,EAAKhB,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACD;AACF,GALH;AAMH,CAPM;AASP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQiB,QAAR,EAAkBC,QAAlB,KAAgCP,QAAD,IAAc;AAC9Df,EAAAA,OAAO,CAAEK,KAAT,CAAeD,KAAf,EAAsBiB,QAAtB,EAAgCC,QAAhC,EAA0CL,IAA1C,CAA+CC,QAAQ,IAAI;AACvD,QAAGA,QAAQ,CAACP,IAAT,CAAcQ,UAAd,KAA6B,CAAhC,EAAkC;AAC/BJ,MAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACF;AACF,GAJH;AAKH,CANM;AAQP,OAAO,MAAMS,MAAM,GAAG,MAAOR,QAAD,IAAc;AACtCf,EAAAA,OAAO,CAAEuB,MAAT,GAAkBN,IAAlB,CAAuBC,QAAQ,IAAI;AAC/B,QAAGA,QAAQ,CAACP,IAAT,CAAcQ,UAAd,KAA6B,CAAhC,EAAkC;AAC9BJ,MAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACF;AACH,GAJH;AAKH,CANM;AAQP,eAAeP,WAAf","sourcesContent":["import { authAPI } from \"../../api/api\";\n\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\n\n\nlet initialState = {\n   userId: null,\n   email: null,\n   login: null,\n   isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_AUTH_USER_DATA:\n            return {\n                ...state, \n                ...action.data,\n                isAuth: true   \n            }\n\n    default:\n        return\n    }\n}\n\nexport const setAuthUserData = (userId, email, login) => ({type: SET_AUTH_USER_DATA, pay:{userId, email, login}});\nexport const getAuthUserData = () => (dispatch) => {\n    authAPI .me().then(response => {\n        if(response.data.resultCode === 0){\n            let {id, email, login} = response.data.data\n          dispatch(setAuthUserData(id, email, login));\n        }\n      });\n}\n\nexport const login = (email, password, remember) => (dispatch) => {\n    authAPI .login(email, password, remember).then(response => {\n        if(response.data.resultCode === 0){\n           dispatch(getAuthUserData())\n        }\n      });\n}\n\nexport const logout = () => (dispatch) => {\n    authAPI .logout().then(response => {\n        if(response.data.resultCode === 0){\n            dispatch(getAuthUserData())\n         }\n      });\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}
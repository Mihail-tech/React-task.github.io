{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/components/Recomendation/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress } from '../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport preloader from \"../../assers/img/loading.svg\";\nimport Preloader from '../common/Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getPageSize, getUsers } from './Users-selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize); // this.props.setCurrentPage(pageNumber);\n      // this.props.toggleIsFetching(true)\n      // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n      //     this.props.toggleIsFetching(false)   \n      //     this.props.setUsers(data.items)\n      // });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize); // this.props.toggleIsFetching(true)\n    // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n    //     this.props.toggleIsFetching(false)    \n    //     this.props.setUsers(data.items);\n    //     this.props.setTotalUsersCount(data.totalCount);\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n} // const mapStateToProps = (state) => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress\n//     }\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount,\n    currentPage: getCurrentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers\n}))(UsersContainer); // const mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         serUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountAC(totalCount))\n//         },\n//         toggleIsFetchingAc: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n// export default connect(mapStateToProps,  {\n//         follow,\n//         unfollow,\n//         setCurrentPage,\n//         toggleFollowingProgress,\n//         getUsers\n// }\n// )(withRedirect) ;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Recomendation/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","unfollow","toggleFollowingProgress","axios","Users","Preloader","usersAPI","withAuthRedirect","compose","getPageSize","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","getTotalUsersCount","getCurrentPage","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EACIC,cADJ,EAEIC,QAFJ,EAGIC,uBAHJ,QAIY,wBAJZ;AAKA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,mBAAtC;;;;AAIA,MAAMC,cAAN,SAA6Bd,KAAK,CAACe,SAAnC,CAA8C;AAAA;AAAA;;AAAA,SAc1CC,aAd0C,GAczBC,UAAD,IAAgB;AAE5B,WAAKC,KAAL,CAAWL,QAAX,CAAoBI,UAApB,EAAgC,KAAKC,KAAL,CAAWC,QAA3C,EAF4B,CAI5B;AACA;AAEA;AACA;AACA;AAEA;AACH,KA1ByC;AAAA;;AAE1CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWL,QAAX,CAAoB,KAAKK,KAAL,CAAWG,WAA/B,EAA4C,KAAKH,KAAL,CAAWC,QAAvD,EADgB,CAEhB;AAEA;AAEA;AACA;AACA;AACA;AACH;;AAiBDG,EAAAA,MAAM,GAAI;AACN,wBAAO;AAAA,iBACN,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAwC,IADlC,eAEH,QAAC,KAAD;AACI,QAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eADhC;AAEI,QAAA,QAAQ,EAAI,KAAKN,KAAL,CAAWC,QAF3B;AAGI,QAAA,WAAW,EAAI,KAAKD,KAAL,CAAWG,WAH9B;AAII,QAAA,aAAa,EAAE,KAAKL,aAJxB;AAKI,QAAA,KAAK,EAAG,KAAKE,KAAL,CAAWO,KALvB;AAMI,QAAA,MAAM,EAAG,KAAKP,KAAL,CAAWhB,MANxB;AAOI,QAAA,QAAQ,EAAG,KAAKgB,KAAL,CAAWd,QAP1B;AAQI,QAAA,mBAAmB,EAAI,KAAKc,KAAL,CAAWQ;AARtC;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAcH;;AA5CyC,C,CAiD9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,KAAK,EAAEZ,QAAQ,CAACe,KAAD,CADZ;AAEHT,IAAAA,QAAQ,EAAEP,WAAW,CAACgB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEK,kBAHd;AAIHR,IAAAA,WAAW,EAAES,cAJV;AAKHP,IAAAA,UAAU,EAAEK,KAAK,CAACG,SAAN,CAAgBR,UALzB;AAMHG,IAAAA,mBAAmB,EAAEE,KAAK,CAACG,SAAN,CAAgBL;AANlC,GAAP;AAQH,CATD;;AAcA,eAAef,OAAO,CAClBV,OAAO,CAAC0B,eAAD,EAAkB;AACrBzB,EAAAA,MADqB;AAErBE,EAAAA,QAFqB;AAGrBD,EAAAA,cAHqB;AAIrBE,EAAAA,uBAJqB;AAKrBQ,EAAAA;AALqB,CAAlB,CADW,CAAP,CAQbC,cARa,CAAf,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { follow, \n    setCurrentPage, \n    unfollow,\n    toggleFollowingProgress,\n     } from '../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users'\nimport preloader from '../../assers/img/loading.svg';\nimport Preloader from '../common/Preloader/Preloader';\nimport { usersAPI } from '../../api/api';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getPageSize, getUsers } from './Users-selectors';\n\n\n\nclass UsersContainer extends React.Component  {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n        // this.props.toggleIsFetching(true)\n\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n\n        //     this.props.toggleIsFetching(false)    \n        //     this.props.setUsers(data.items);\n        //     this.props.setTotalUsersCount(data.totalCount);\n        // });\n    }\n\n    onPageChanged = (pageNumber) => {\n\n        this.props.getUsers(pageNumber, this.props.pageSize);\n\n        // this.props.setCurrentPage(pageNumber);\n        // this.props.toggleIsFetching(true)\n        \n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        //     this.props.toggleIsFetching(false)   \n        //     this.props.setUsers(data.items)\n        \n        // });\n    }\n\n\n    render () { \n        return <>\n        {this.props.isFetching ? <Preloader /> : null}\n            <Users \n                totalUsersCount={this.props.totalUsersCount}\n                pageSize = {this.props.pageSize}\n                currentPage = {this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                users= {this.props.users}\n                follow= {this.props.follow}\n                unfollow= {this.props.unfollow}\n                followingInProgress = {this.props.followingInProgress}\n            />\n        </>\n         \n    }\n}\n\n\n\n// const mapStateToProps = (state) => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress\n//     }\n// }\n\nconst mapStateToProps = (state) => {\n    return {\n        users: getUsers(state) ,\n        pageSize: getPageSize(state) ,\n        totalUsersCount: getTotalUsersCount,\n        currentPage: getCurrentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsers\n    })\n)(UsersContainer);\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         serUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountAC(totalCount))\n//         },\n//         toggleIsFetchingAc: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n// export default connect(mapStateToProps,  {\n//         follow,\n//         unfollow,\n//         setCurrentPage,\n//         toggleFollowingProgress,\n//         getUsers\n// }\n// )(withRedirect) ;\n\n\n"]},"metadata":{},"sourceType":"module"}
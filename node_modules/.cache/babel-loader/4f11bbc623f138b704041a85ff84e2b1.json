{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem\";\nimport DialogMessage from \"./DialogMessage\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../redux/dialog-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport store from '../redux/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogsContainer = props => {\n  let state = props.store.getState().dialogPage;\n\n  let onSendMessageClick = () => {\n    store.dispatch(sendMessageCreator());\n  };\n\n  let onNewMessageClick = body => {\n    store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    updateNewMessageBody: onNewMessageClick,\n    sendMessage: onSendMessageClick,\n    dialogPage: store.getState().dialogPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogsContainer;\n\nlet mapStateToProps = state => {\n  return {\n    dialogPage: state.dialogPage\n  };\n};\n\nlet mapDispatchToProps = () => {\n  return {\n    updateNewMessageBody: () => {\n      dispatch(sendMessageCreator());\n    },\n    sendMessage: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  };\n};\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","NavLink","classes","DialogItem","DialogMessage","sendMessageCreator","updateNewMessageBodyCreator","Dialogs","connect","store","DialogsContainer","props","state","getState","dialogPage","onSendMessageClick","dispatch","onNewMessageClick","body","mapStateToProps","mapDispatchToProps","updateNewMessageBody","sendMessage","SuperDialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,EAA6BC,2BAA7B,QAAgE,yBAAhE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAKA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAEhC,MAAIC,KAAK,GAAGD,KAAK,CAACF,KAAN,CAAYI,QAAZ,GAAuBC,UAAnC;;AAIA,MAAIC,kBAAkB,GAAG,MAAM;AAE3BN,IAAAA,KAAK,CAACO,QAAN,CAAeX,kBAAkB,EAAjC;AAEH,GAJD;;AAMA,MAAIY,iBAAiB,GAAIC,IAAD,IAAU;AAC9BT,IAAAA,KAAK,CAACO,QAAN,CAAeV,2BAA2B,CAACY,IAAD,CAA1C;AACH,GAFD;;AAIA,sBACI,QAAC,OAAD;AAAS,IAAA,oBAAoB,EAAED,iBAA/B;AACA,IAAA,WAAW,EAAGF,kBADd;AAEA,IAAA,UAAU,EAAEN,KAAK,CAACI,QAAN,GAAiBC;AAF7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;KAAMJ,gB;;AAuBN,IAAIS,eAAe,GAAIP,KAAD,IAAW;AAC7B,SAAO;AACHE,IAAAA,UAAU,EAAEF,KAAK,CAACE;AADf,GAAP;AAGH,CAJD;;AAKA,IAAIM,kBAAkB,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,oBAAoB,EAAE,MAAM;AAACL,MAAAA,QAAQ,CAACX,kBAAkB,EAAnB,CAAR;AAA+B,KADzD;AAEHiB,IAAAA,WAAW,EAAGJ,IAAD,IAAU;AAACF,MAAAA,QAAQ,CAACV,2BAA2B,CAACY,IAAD,CAA5B,CAAR;AAA4C;AAFjE,GAAP;AAIH,CALD;;AAOA,MAAMK,qBAAqB,GAAGf,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cb,OAA7C,CAA9B;AAEA,eAAeG,gBAAf","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem\"\nimport DialogMessage from \"./DialogMessage\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../redux/dialog-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport store from '../redux/store';\n\n\n\n\nconst DialogsContainer = (props) => {\n\n    let state = props.store.getState().dialogPage;\n\n\n\n    let onSendMessageClick = () => {\n\n        store.dispatch(sendMessageCreator())\n\n    }\n    \n    let onNewMessageClick = (body) => {\n        store.dispatch(updateNewMessageBodyCreator(body))\n    }\n\n    return (\n        <Dialogs updateNewMessageBody={onNewMessageClick} \n        sendMessage= {onSendMessageClick} \n        dialogPage={store.getState().dialogPage}/>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogPage: state.dialogPage\n    }\n}\nlet mapDispatchToProps = () => {\n    return {\n        updateNewMessageBody: () => {dispatch(sendMessageCreator())},\n        sendMessage: (body) => {dispatch(updateNewMessageBodyCreator(body))}\n    }\n}\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;\n\n"]},"metadata":{},"sourceType":"module"}
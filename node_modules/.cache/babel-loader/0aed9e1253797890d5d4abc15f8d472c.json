{"ast":null,"code":"var _jsxFileName = \"/Users/itshatle/Desktop/rest/reac/src/hoc/withAuthRedirect.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => {\n  return {\n    isAuth: state.props.isAuth\n  };\n};\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 43\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/hoc/withAuthRedirect.jsx"],"names":["React","Component","Redirect","mapStateToPropsForRedirect","state","isAuth","props","withAuthRedirect","RedirectComponent","render","ConnectedAuthRedirectComponent","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAIA,IAAIC,0BAA0B,GAAIC,KAAD,IAAW;AACxC,SAAO;AAEHC,IAAAA,MAAM,EAAED,KAAK,CAACE,KAAN,CAAYD;AAFjB,GAAP;AAIH,CALD;;AAQA,OAAO,MAAME,gBAAgB,GAAIN,SAAD,IAAe;AAC3C,QAAMO,iBAAN,SAAgCR,KAAK,CAACC,SAAtC,CAAgD;AAC5CQ,IAAAA,MAAM,GAAG;AACL,UAAG,CAAC,KAAKH,KAAL,CAAWD,MAAf,EAAuB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACvB,0BAAO,QAAC,SAAD,OAAe,KAAKC;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAQhD,MAAII,8BAA8B,GAAGC,OAAO,CAACR,0BAAD,CAAP,CAAoCK,iBAApC,CAArC;AAGA,SAAOE,8BAAP;AACH,CAbM","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        \n        isAuth: state.props.isAuth\n    }\n}\n\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props} />\n        }\n    }\n\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\n    return ConnectedAuthRedirectComponent;\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { usersAPI } from \"../../api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  //0\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(users => {\n          if (users.id === action.userId) {\n            return { ...users,\n              followed: true\n            };\n          }\n\n          return users;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(users => {\n          if (users.id === action.userId) {\n            return { ...users,\n              followed: false\n            };\n          }\n\n          return users;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n      };\n\n    default:\n      return;\n  }\n};\n\nexport const followSuccec = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsers = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport const follow = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/itshatle/Desktop/rest/reac/src/components/redux/users-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","id","userId","followed","filter","followSuccec","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","then","data","items","totalCount","follow"],"mappings":"AAAA,SAASA,QAAT,QAAyB,eAAzB;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,4BAA4B,GAAG,8BAArC;AAGA,IAAIC,YAAY,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,QAAQ,EAAE,CAFM;AAGhBC,EAAAA,eAAe,EAAE,CAHD;AAGI;AACpBC,EAAAA,WAAW,EAAE,CAJG;AAKhBC,EAAAA,UAAU,EAAE,KALI;AAMhBC,EAAAA,mBAAmB,EAAE;AANL,CAAnB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,MAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBV,KAAK,IAAI;AAC5B,cAAGA,KAAK,CAACW,EAAN,KAAaH,MAAM,CAACI,MAAvB,EAA+B;AAC3B,mBAAO,EAAC,GAAGZ,KAAJ;AAAWa,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACH;;AACD,iBAAOb,KAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKP,QAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBV,KAAK,IAAI;AAC5B,cAAGA,KAAK,CAACW,EAAN,KAAaH,MAAM,CAACI,MAAvB,EAA+B;AAC3B,mBAAO,EAAC,GAAGZ,KAAJ;AAAWa,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACH;;AACD,iBAAOb,KAAP;AACH,SALM;AAFJ,OAAP;;AAUJ,SAAKN,SAAL;AACA,aAAO,EACH,GAAGa,KADA;AAEHP,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFX,OAAP;;AAIA,SAAKL,gBAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,WAAW,EAAEK,MAAM,CAACL;AAFjB,OAAP;;AAIJ,SAAKP,qBAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHL,QAAAA,eAAe,EAAEM,MAAM,CAACN;AAFrB,OAAP;;AAIJ,SAAKL,kBAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFhB,OAAP;;AAIJ,SAAKN,4BAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHF,QAAAA,mBAAmB,EAAEG,MAAM,CAACJ,UAAP,GACrB,CAAC,GAAGG,KAAK,CAACF,mBAAV,EAA+BG,MAAM,CAACI,MAAtC,CADqB,GAEnBL,KAAK,CAACF,mBAAN,CAA0BS,MAA1B,CAAiCH,EAAE,IAAGA,EAAE,KAAKH,MAAM,CAACI,MAApD;AAJC,OAAP;;AAOR;AACI;AApDJ;AAsDH,CAvDD;;AAyDA,OAAO,MAAMG,YAAY,GAAIH,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEjB,MAAP;AAAeoB,EAAAA;AAAf,CAAb,CAArB;AACP,OAAO,MAAMI,QAAQ,GAAIJ,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEhB,QAAP;AAAiBmB,EAAAA;AAAjB,CAAb,CAAjB;AACP,OAAO,MAAMK,QAAQ,GAAIjB,KAAD,KAAY;AAACS,EAAAA,IAAI,EAACf,SAAN;AAAiBM,EAAAA;AAAjB,CAAZ,CAAjB;AACP,OAAO,MAAMkB,cAAc,GAAIf,WAAD,KAAkB;AAACM,EAAAA,IAAI,EAACd,gBAAN;AAAwBQ,EAAAA;AAAxB,CAAlB,CAAvB;AACP,OAAO,MAAMgB,kBAAkB,GAAIjB,eAAD,KAAsB;AAACO,EAAAA,IAAI,EAACb,qBAAN;AAA6BM,EAAAA;AAA7B,CAAtB,CAA3B;AACP,OAAO,MAAMkB,gBAAgB,GAAIhB,UAAD,KAAiB;AAACK,EAAAA,IAAI,EAAEZ,kBAAP;AAA2BO,EAAAA;AAA3B,CAAjB,CAAzB;AACP,OAAO,MAAMiB,uBAAuB,GAAG,CAACjB,UAAD,EAAaQ,MAAb,MAAyB;AAACH,EAAAA,IAAI,EAAEX,4BAAP;AAAqCM,EAAAA,UAArC;AAAiDQ,EAAAA;AAAjD,CAAzB,CAAhC;AAEP,OAAO,MAAMU,QAAQ,GAAG,CAACnB,WAAD,EAAcF,QAAd,KAA2B;AAC/C,SAAQsB,QAAD,IAAc;AAEjBA,IAAAA,QAAQ,CAACH,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AAEI7B,IAAAA,QAAQ,CAAC+B,QAAT,CAAkBnB,WAAlB,EAA+BF,QAA/B,EAAyCuB,IAAzC,CAA8CC,IAAI,IAAI;AAElDF,MAAAA,QAAQ,CAACH,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAG,MAAAA,QAAQ,CAACN,QAAQ,CAACQ,IAAI,CAACC,KAAN,CAAT,CAAR;AACAH,MAAAA,QAAQ,CAACJ,kBAAkB,CAACM,IAAI,CAACE,UAAN,CAAnB,CAAR;AACH,KALD;AAMP,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMC,MAAM,GAAG,CAACzB,WAAD,EAAcF,QAAd,KAA2B;AAC7C,SAAQsB,QAAD,IAAc;AAEjBA,IAAAA,QAAQ,CAACH,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AAEI7B,IAAAA,QAAQ,CAAC+B,QAAT,CAAkBnB,WAAlB,EAA+BF,QAA/B,EAAyCuB,IAAzC,CAA8CC,IAAI,IAAI;AAElDF,MAAAA,QAAQ,CAACH,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAG,MAAAA,QAAQ,CAACN,QAAQ,CAACQ,IAAI,CAACC,KAAN,CAAT,CAAR;AACAH,MAAAA,QAAQ,CAACJ,kBAAkB,CAACM,IAAI,CAACE,UAAN,CAAnB,CAAR;AACH,KALD;AAMP,GAVD;AAWH,CAZM;AAeP,eAAerB,YAAf","sourcesContent":["import { usersAPI } from \"../../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\nlet initialState = {\n   users: [ ],\n   pageSize: 5,\n   totalUsersCount: 0, //0\n   currentPage: 1,\n   isFetching: false,\n   followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FOLLOW:\n            return {\n                ...state, \n                users: state.users.map(users => {\n                    if(users.id === action.userId) {\n                        return {...users, followed: true}\n                    }\n                    return users\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state, \n                users: state.users.map(users => {\n                    if(users.id === action.userId) {\n                        return {...users, followed: false}\n                    }\n                    return users\n                })\n            }\n        \n        case SET_USERS: \n        return {\n            ...state, \n            users: action.users\n        }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching ? \n                [...state.followingInProgress, action.userId] \n                : state.followingInProgress.filter(id=> id !== action.userId)\n            }\n\n    default:\n        return\n    }\n}\n\nexport const followSuccec = (userId) => ({type: FOLLOW, userId});\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type:SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type:SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({type:SET_TOTAL_USERS_COUNT, totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\n\nexport const getUsers = (currentPage, pageSize) => {\n    return (dispatch) => {\n\n        dispatch(toggleIsFetching(true));\n\n            usersAPI.getUsers(currentPage, pageSize).then(data => {\n\n                dispatch(toggleIsFetching(false))   \n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount));\n            });\n    }\n}\n\nexport const follow = (currentPage, pageSize) => {\n    return (dispatch) => {\n\n        dispatch(toggleIsFetching(true));\n\n            usersAPI.getUsers(currentPage, pageSize).then(data => {\n\n                dispatch(toggleIsFetching(false))   \n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount));\n            });\n    }\n}\n\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}